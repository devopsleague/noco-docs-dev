"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[3164],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},83679:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(87462),o=(n(67294),n(3905));const i={title:"Development Setup",description:"How to set-up your development environment",tags:["Engineering"]},a=void 0,l={unversionedId:"engineering/development-setup",id:"engineering/development-setup",title:"Development Setup",description:"How to set-up your development environment",source:"@site/docs/150.engineering/030.development-setup.md",sourceDirName:"150.engineering",slug:"/engineering/development-setup",permalink:"/engineering/development-setup",draft:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/docs/150.engineering/030.development-setup.md",tags:[{label:"Engineering",permalink:"/tags/engineering"}],version:"current",sidebarPosition:30,frontMatter:{title:"Development Setup",description:"How to set-up your development environment",tags:["Engineering"]},sidebar:"tutorialSidebar",previous:{title:"Repository structure",permalink:"/engineering/repository-structure"},next:{title:"Writing unit tests",permalink:"/engineering/unit-testing"}},s={},c=[{value:"Clone the repo",id:"clone-the-repo",level:2},{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Start Frontend",id:"start-frontend",level:2},{value:"Start Backend",id:"start-backend",level:2},{value:"Enabling CI-CD for Draft PR",id:"enabling-ci-cd-for-draft-pr",level:2},{value:"Accessing CI-CD Failure Screenshots",id:"accessing-ci-cd-failure-screenshots",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"clone-the-repo"},"Clone the repo"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/nocodb/nocodb\n# change directory to the project root\ncd nocodb\n")),(0,o.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# run from the project root\n# this command will install the dependencies including sdk build\npnpm bootstrap\n")),(0,o.kt)("h2",{id:"start-frontend"},"Start Frontend"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# run from the project root\npnpm start:frontend\n# runs on port 3000\n")),(0,o.kt)("h2",{id:"start-backend"},"Start Backend"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# run from the project root\npnpm start:backend\n# runs on port 8080\n")),(0,o.kt)("p",null,"Any changes made to frontend and backend will be automatically reflected in the browser."),(0,o.kt)("h2",{id:"enabling-ci-cd-for-draft-pr"},"Enabling CI-CD for Draft PR"),(0,o.kt)("p",null,"CI-CD will be triggered on moving a PR from draft state to ",(0,o.kt)("inlineCode",{parentName:"p"},"Ready for review")," state & on pushing changes to ",(0,o.kt)("inlineCode",{parentName:"p"},"Develop"),". To verify CI-CD before requesting for review, add label ",(0,o.kt)("inlineCode",{parentName:"p"},"trigger-CI")," on Draft PR. "),(0,o.kt)("h2",{id:"accessing-ci-cd-failure-screenshots"},"Accessing CI-CD Failure Screenshots"),(0,o.kt)("p",null,"For Playwright tests, screenshots are captured on the tests. These will provide vital clues for debugging possible issues observed in CI-CD. To access screenshots, Open link associated with CI-CD run & click on ",(0,o.kt)("inlineCode",{parentName:"p"},"Artifacts")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/86527202/192965070-dc04b952-70fb-4197-b4bd-ca7eda066e60.png",alt:"Screenshot 2022-09-29 at 12 43 37 PM"})))}u.isMDXComponent=!0}}]);