"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[5305],{21164:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var n=i(85893),r=i(11151);const t={title:"String functions",description:"This article explains various string functions that can be used in formula fields.",tags:["Fields","Field types","Formula"],keywords:["Fields","Field types","Formula","Create formula field","String functions"]},d=void 0,l={id:"fields/field-types/formula/string-functions",title:"String functions",description:"This article explains various string functions that can be used in formula fields.",source:"@site/docs/070.fields/040.field-types/060.formula/030.string-functions.md",sourceDirName:"070.fields/040.field-types/060.formula",slug:"/fields/field-types/formula/string-functions",permalink:"/fields/field-types/formula/string-functions",draft:!1,unlisted:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/docs/070.fields/040.field-types/060.formula/030.string-functions.md",tags:[{label:"Fields",permalink:"/tags/fields"},{label:"Field types",permalink:"/tags/field-types"},{label:"Formula",permalink:"/tags/formula"}],version:"current",sidebarPosition:30,frontMatter:{title:"String functions",description:"This article explains various string functions that can be used in formula fields.",tags:["Fields","Field types","Formula"],keywords:["Fields","Field types","Formula","Create formula field","String functions"]},sidebar:"tutorialSidebar",previous:{title:"Numeric functions",permalink:"/fields/field-types/formula/numeric-functions"},next:{title:"Date functions",permalink:"/fields/field-types/formula/date-functions"}},c={},o=[{value:"String functions",id:"string-functions",level:3},{value:"Related Articles",id:"related-articles",level:2}];function h(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h3,{id:"string-functions",children:"String functions"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Syntax"}),(0,n.jsx)(s.th,{children:"Sample"}),(0,n.jsx)(s.th,{children:"Output"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"CONCAT"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"CONCAT(str1, [str2,...])"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"CONCAT({field1}, ' ', {field2})"})}),(0,n.jsx)(s.td,{children:"Concatenated string of input parameters"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"LEFT"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"LEFT(str1, n)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"LEFT({field}, 3)"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"n"})," characters from the beginning of input parameter"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"LEN"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"LEN(str)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"LEN({field})"})}),(0,n.jsx)(s.td,{children:"Input parameter character length"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"LOWER"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"LOWER(str)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"LOWER({field})"})}),(0,n.jsx)(s.td,{children:"Lower case converted string of input parameter"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"MID"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"MID(str, position, [count])"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"MID({field}, 3, 2)"})}),(0,n.jsxs)(s.td,{children:["Alias for ",(0,n.jsx)(s.code,{children:"SUBSTR"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"REPEAT"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"REPEAT(str, count)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"REPEAT({field}, 2)"})}),(0,n.jsx)(s.td,{children:"Specified copies of the input parameter string concatenated together"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"REPLACE"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"REPLACE(str, srchStr, rplcStr)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"REPLACE({field}, 'int', 'num')"})}),(0,n.jsxs)(s.td,{children:["String, after replacing all occurrences of ",(0,n.jsx)(s.code,{children:"srchStr"})," with ",(0,n.jsx)(s.code,{children:"rplcStr"})]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"RIGHT"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"RIGHT(str, n)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"RIGHT({field}, 3)"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"n"})," characters from the end of input parameter"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"SEARCH"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"SEARCH(str, srchStr)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"SEARCH({field}, 'str')"})}),(0,n.jsxs)(s.td,{children:["Index of ",(0,n.jsx)(s.code,{children:"srchStr"})," specified if found, 0 otherwise"]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"SUBSTR"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"SUBTR(str, position, [count])"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"SUBSTR({field}, 3, 2)"})}),(0,n.jsx)(s.td,{children:"Substring of length 'count' of input string, from the postition specified"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"TRIM"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"TRIM(str)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"TRIM({field})"})}),(0,n.jsx)(s.td,{children:"Remove trailing and leading whitespaces from input parameter"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"UPPER"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"UPPER(str)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"UPPER({field})"})}),(0,n.jsx)(s.td,{children:"Upper case converted string of input parameter"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.strong,{children:"URL"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"URL(str)"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"URL({field})"})}),(0,n.jsx)(s.td,{children:"Convert to a hyperlink if it is a valid URL"})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"related-articles",children:"Related Articles"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/fields/field-types/formula/operators",children:"Numeric and Logical Operators"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/fields/field-types/formula/numeric-functions",children:"Numeric Functions"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/fields/field-types/formula/date-functions",children:"Date Functions"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"/fields/field-types/formula/conditional-expressions",children:"Conditional Expressions"})}),"\n"]})]})}function a(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},11151:(e,s,i)=>{i.d(s,{Z:()=>l,a:()=>d});var n=i(67294);const r={},t=n.createContext(r);function d(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);