"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[4050],{88121:(e,l,t)=>{t.r(l),t.d(l,{assets:()=>n,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>a});var s=t(74848),i=t(28453);const c={title:"Checkbox",description:"This article explains how to create & work with a Checkbox field.",tags:["Fields","Field types","Custom types","Checkbox"],keywords:["Fields","Field types","Custom types","Checkbox","Create checkbox field"]},o=void 0,d={id:"fields/field-types/select-based/checkbox",title:"Checkbox",description:"This article explains how to create & work with a Checkbox field.",source:"@site/docs/070.fields/040.field-types/030.select-based/020.checkbox.md",sourceDirName:"070.fields/040.field-types/030.select-based",slug:"/fields/field-types/select-based/checkbox",permalink:"/fields/field-types/select-based/checkbox",draft:!1,unlisted:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/070.fields/040.field-types/030.select-based/020.checkbox.md",tags:[{label:"Fields",permalink:"/tags/fields"},{label:"Field types",permalink:"/tags/field-types"},{label:"Custom types",permalink:"/tags/custom-types"},{label:"Checkbox",permalink:"/tags/checkbox"}],version:"current",sidebarPosition:20,frontMatter:{title:"Checkbox",description:"This article explains how to create & work with a Checkbox field.",tags:["Fields","Field types","Custom types","Checkbox"],keywords:["Fields","Field types","Custom types","Checkbox","Create checkbox field"]},sidebar:"tutorialSidebar",previous:{title:"Single Select",permalink:"/fields/field-types/select-based/single-select"},next:{title:"Multi Select",permalink:"/fields/field-types/select-based/multi-select"}},n={},a=[{value:"Create a checkbox field",id:"create-a-checkbox-field",level:2},{value:"Cell display",id:"cell-display",level:3},{value:"Supported icons",id:"supported-icons",level:3},{value:"Related fields",id:"related-fields",level:2}];function r(e){const l={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(l.p,{children:"The checkbox field type is used to store boolean values. It can be used to store a simple yes/no value, or true/false, or any other boolean value."}),"\n",(0,s.jsx)(l.h2,{id:"create-a-checkbox-field",children:"Create a checkbox field"}),"\n",(0,s.jsxs)(l.ol,{children:["\n",(0,s.jsxs)(l.li,{children:["Click on ",(0,s.jsx)(l.code,{children:"+"})," icon to the right of ",(0,s.jsx)(l.code,{children:"Fields header"})]}),"\n",(0,s.jsx)(l.li,{children:"On the dropdown modal, enter the field name (Optional)."}),"\n",(0,s.jsxs)(l.li,{children:["Select the field type as ",(0,s.jsx)(l.code,{children:"Checkbox"})," from the dropdown."]}),"\n",(0,s.jsxs)(l.li,{children:["Select icon for the field; defaults to ",(0,s.jsx)(l.code,{children:"check"})," icon (Optional)."]}),"\n",(0,s.jsxs)(l.li,{children:["Select color for the field; defaults to ",(0,s.jsx)(l.code,{children:"grey"})," (Optional)."]}),"\n",(0,s.jsx)(l.li,{children:"Set default value for the field (Optional)."}),"\n",(0,s.jsxs)(l.li,{children:["Click on ",(0,s.jsx)(l.code,{children:"Save Field"})," button."]}),"\n"]}),"\n",(0,s.jsx)(l.p,{children:(0,s.jsx)(l.img,{alt:"image",src:t(92447).A+"",width:"2874",height:"1396"})}),"\n",(0,s.jsx)(l.h3,{id:"cell-display",children:"Cell display"}),"\n",(0,s.jsxs)(l.p,{children:["Cell displays the icon in the color selected for the field. A true value will be represented by a checked icon or a filled icon",(0,s.jsx)(l.br,{}),"\n",(0,s.jsx)(l.img,{alt:"image",src:t(43065).A+"",width:"1268",height:"513"})]}),"\n",(0,s.jsx)(l.h3,{id:"supported-icons",children:"Supported icons"}),"\n",(0,s.jsxs)(l.p,{children:["NocoDB supports the following icons for the checkbox field type.",(0,s.jsx)(l.br,{}),"\n",(0,s.jsx)(l.img,{alt:"image",src:t(27727).A+"",width:"401",height:"479"})]}),"\n",(0,s.jsx)(l.h2,{id:"related-fields",children:"Related fields"}),"\n",(0,s.jsxs)(l.ul,{children:["\n",(0,s.jsx)(l.li,{children:(0,s.jsx)(l.a,{href:"/fields/field-types/select-based/rating",children:"Rating"})}),"\n"]})]})}function h(e={}){const{wrapper:l}={...(0,i.R)(),...e.components};return l?(0,s.jsx)(l,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},43065:(e,l,t)=>{t.d(l,{A:()=>s});const s=t.p+"assets/images/attachment-cell-display-d0e036b051275db64f5a516ad8c604b5.png"},27727:(e,l,t)=>{t.d(l,{A:()=>s});const s=t.p+"assets/images/checkbox-icon-50a0b9c5edbae35ca181d433419c943c.png"},92447:(e,l,t)=>{t.d(l,{A:()=>s});const s=t.p+"assets/images/checkbox-d62bbc732b50b8328ce528b7a9496cee.png"},28453:(e,l,t)=>{t.d(l,{R:()=>o,x:()=>d});var s=t(96540);const i={},c=s.createContext(i);function o(e){const l=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function d(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(c.Provider,{value:l},e.children)}}}]);