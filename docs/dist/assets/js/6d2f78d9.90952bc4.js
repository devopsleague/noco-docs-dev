"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[2926],{79033:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>n,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var i=s(74848),l=s(28453);const o={title:"JSON",tags:["Fields","Field types","Custom types","JSON"]},n=void 0,d={id:"fields/field-types/custom-types/json",title:"JSON",description:"JSON is a custom field type that allows you to store JSON data in a field. Useful for storing data that can be represented as a JSON object, like API Response, or a set of key-value pairs.",source:"@site/docs/070.fields/040.field-types/050.custom-types/080.json.md",sourceDirName:"070.fields/040.field-types/050.custom-types",slug:"/fields/field-types/custom-types/json",permalink:"/fields/field-types/custom-types/json",draft:!1,unlisted:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/070.fields/040.field-types/050.custom-types/080.json.md",tags:[{label:"Fields",permalink:"/tags/fields"},{label:"Field types",permalink:"/tags/field-types"},{label:"Custom types",permalink:"/tags/custom-types"},{label:"JSON",permalink:"/tags/json"}],version:"current",sidebarPosition:80,frontMatter:{title:"JSON",tags:["Fields","Field types","Custom types","JSON"]},sidebar:"tutorialSidebar",previous:{title:"Specific DB type",permalink:"/fields/field-types/custom-types/specific-db-type"},next:{title:"Formula",permalink:"/category/formula"}},a={},c=[{value:"Create a JSON field",id:"create-a-json-field",level:2},{value:"Cell display",id:"cell-display",level:3}];function r(e){const t={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"JSON"})," is a custom field type that allows you to store JSON data in a field. Useful for storing data that can be represented as a JSON object, like API Response, or a set of key-value pairs."]}),"\n",(0,i.jsx)(t.h2,{id:"create-a-json-field",children:"Create a JSON field"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Click on ",(0,i.jsx)(t.code,{children:"+"})," icon to the right of ",(0,i.jsx)(t.code,{children:"Fields header"})]}),"\n",(0,i.jsx)(t.li,{children:"On the dropdown modal, enter the field name (Optional)."}),"\n",(0,i.jsxs)(t.li,{children:["Select the field type as ",(0,i.jsx)(t.code,{children:"JSON"})," from the dropdown."]}),"\n",(0,i.jsx)(t.li,{children:"Configure default value for the field (Optional)"}),"\n",(0,i.jsxs)(t.li,{children:["Click on ",(0,i.jsx)(t.code,{children:"Save Field"})," button."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"image",src:s(60334).A+"",width:"2876",height:"1424"})}),"\n",(0,i.jsx)(t.h3,{id:"cell-display",children:"Cell display"}),"\n",(0,i.jsx)(t.p,{children:"Cell displays the JSON data stored in the field. Click on expand record icon to open the JSON data in an editor modal."})]})}function p(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},60334:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/JSON-11cd3835058fadbd8e0bd98d8dd1fc50.png"},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>d});var i=s(96540);const l={},o=i.createContext(l);function n(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:n(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);