"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[8562],{3380:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var i=n(74848),l=n(28453);const s={title:"Phone Number",description:"This article explains how to create & work with a Phone number field.",tags:["Fields","Field types","Text based types","Phone number"],keywords:["Fields","Field types","Text based types","Phone number","Create phone number field"]},d=void 0,o={id:"fields/field-types/text-based/phonenumber",title:"Phone Number",description:"This article explains how to create & work with a Phone number field.",source:"@site/docs/070.fields/040.field-types/010.text-based/040.phonenumber.md",sourceDirName:"070.fields/040.field-types/010.text-based",slug:"/fields/field-types/text-based/phonenumber",permalink:"/fields/field-types/text-based/phonenumber",draft:!1,unlisted:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/070.fields/040.field-types/010.text-based/040.phonenumber.md",tags:[{label:"Fields",permalink:"/tags/fields"},{label:"Field types",permalink:"/tags/field-types"},{label:"Text based types",permalink:"/tags/text-based-types"},{label:"Phone number",permalink:"/tags/phone-number"}],version:"current",sidebarPosition:40,frontMatter:{title:"Phone Number",description:"This article explains how to create & work with a Phone number field.",tags:["Fields","Field types","Text based types","Phone number"],keywords:["Fields","Field types","Text based types","Phone number","Create phone number field"]},sidebar:"tutorialSidebar",previous:{title:"Email",permalink:"/fields/field-types/text-based/email"},next:{title:"URL",permalink:"/fields/field-types/text-based/url"}},r={},a=[{value:"Create a <code>Phone number</code> field",id:"create-a-phone-number-field",level:2},{value:"Similar text based fields",id:"similar-text-based-fields",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Phone number"})," field is text based field that allows you to store phone numbers. It also allows you to validate the phone number."]}),"\n",(0,i.jsxs)(t.h2,{id:"create-a-phone-number-field",children:["Create a ",(0,i.jsx)(t.code,{children:"Phone number"})," field"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Click on ",(0,i.jsx)(t.code,{children:"+"})," icon to the right of ",(0,i.jsx)(t.code,{children:"Fields header"})]}),"\n",(0,i.jsx)(t.li,{children:"On the dropdown modal, enter the field name (Optional)."}),"\n",(0,i.jsxs)(t.li,{children:["Select the field type as ",(0,i.jsx)(t.code,{children:"Phonenumber"})," from the dropdown."]}),"\n",(0,i.jsxs)(t.li,{children:["Enable validation by toggling the ",(0,i.jsx)(t.code,{children:"Validate Phonenumber"})," checkbox (Optional)."]}),"\n",(0,i.jsx)(t.li,{children:"Set default value for the field (Optional)."}),"\n",(0,i.jsxs)(t.li,{children:["Click on ",(0,i.jsx)(t.code,{children:"Save Field"})," button."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"image",src:n(41002).A+"",width:"2876",height:"1230"})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Specify default value without quotes."}),"\n",(0,i.jsx)(t.li,{children:"Validation only ensures that the value entered is a valid phone number. It does not check if the phone number exists."}),"\n"]})}),"\n",(0,i.jsx)(t.h2,{id:"similar-text-based-fields",children:"Similar text based fields"}),"\n",(0,i.jsx)(t.p,{children:"Following are the other text based fields available in NocoDB, custom-built for specific use cases."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/fields/field-types/text-based/single-line-text",children:"Single line text"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/fields/field-types/text-based/long-text",children:"Long text"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/fields/field-types/text-based/url",children:"URL"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/fields/field-types/text-based/email",children:"Email"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},41002:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/phonenumber-1913eec12ec23e7b62e8c83ca69c7627.png"},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(96540);const l={},s=i.createContext(l);function d(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);