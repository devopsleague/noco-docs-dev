"use strict";(self.webpackChunknoco_docs=self.webpackChunknoco_docs||[]).push([[9558],{91094:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>d,toc:()=>r});var s=t(74848),n=t(28453);const c={title:"Specific DB type",description:"This article explains how to create & work with a Specific DB Type field.",tags:["Fields","Field types","Custom types","Specific DB type"],keywords:["Fields","Field types","Custom types","Specific DB type","Create specific db type field"]},l=void 0,d={id:"fields/field-types/custom-types/specific-db-type",title:"Specific DB type",description:"This article explains how to create & work with a Specific DB Type field.",source:"@site/docs/070.fields/040.field-types/050.custom-types/070.specific-db-type.md",sourceDirName:"070.fields/040.field-types/050.custom-types",slug:"/fields/field-types/custom-types/specific-db-type",permalink:"/fields/field-types/custom-types/specific-db-type",draft:!1,unlisted:!1,editUrl:"https://github.com/nocodb/nocodb/tree/develop/packages/noco-docs/docs/070.fields/040.field-types/050.custom-types/070.specific-db-type.md",tags:[{label:"Fields",permalink:"/tags/fields"},{label:"Field types",permalink:"/tags/field-types"},{label:"Custom types",permalink:"/tags/custom-types"},{label:"Specific DB type",permalink:"/tags/specific-db-type"}],version:"current",sidebarPosition:70,frontMatter:{title:"Specific DB type",description:"This article explains how to create & work with a Specific DB Type field.",tags:["Fields","Field types","Custom types","Specific DB type"],keywords:["Fields","Field types","Custom types","Specific DB type","Create specific db type field"]},sidebar:"tutorialSidebar",previous:{title:"Geometry",permalink:"/fields/field-types/custom-types/geometry"},next:{title:"JSON",permalink:"/fields/field-types/custom-types/json"}},o={},r=[{value:"Create a Specific DB Type field",id:"create-a-specific-db-type-field",level:2},{value:"Advanced field attributes",id:"advanced-field-attributes",level:3}];function a(e){const i={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"create-a-specific-db-type-field",children:"Create a Specific DB Type field"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Click on ",(0,s.jsx)(i.code,{children:"+"})," icon to the right of ",(0,s.jsx)(i.code,{children:"Fields header"})]}),"\n",(0,s.jsx)(i.li,{children:"On the dropdown modal, enter the field name (Optional)."}),"\n",(0,s.jsxs)(i.li,{children:["Select the field type as ",(0,s.jsx)(i.code,{children:"Specific DB Type"})," from the dropdown."]}),"\n",(0,s.jsx)(i.li,{children:"Configure default value for the field (Optional)"}),"\n",(0,s.jsx)(i.li,{children:"Provide DB specific data type configurations"}),"\n",(0,s.jsxs)(i.li,{children:["Click on ",(0,s.jsx)(i.code,{children:"Save Field"})," button."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"image",src:t(42340).A+"",width:"2874",height:"1522"})}),"\n",(0,s.jsx)(i.h3,{id:"advanced-field-attributes",children:"Advanced field attributes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"NN"})," ",(0,s.jsx)(i.strong,{children:"Not Null"})," : Ensures that a column cannot have a NULL value, requiring that a value must always be provided."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"PK"})," ",(0,s.jsx)(i.strong,{children:"Primary Key"})," : Uniquely identifies each record in a table."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"AI"})," ",(0,s.jsx)(i.strong,{children:"Auto Increment"})," : Automatically generates a unique number for each new record, typically used with primary keys."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"UN"})," ",(0,s.jsx)(i.strong,{children:"Unsigned"})," : Ensures that a column can only store non-negative numbers, commonly used for counters, identifiers, or monetary values."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"AU"})," ",(0,s.jsx)(i.strong,{children:"Auto Update"})," : Automatically updates a column to the current timestamp when a record is updated, often used for timestamp or datetime columns."]}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsx)(i.p,{children:"Specific DB type is available only for external Data source connections"})})]})}function p(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},42340:(e,i,t)=>{t.d(i,{A:()=>s});const s=t.p+"assets/images/specific-db-type-8f55b4cd889fbfd2d9a88abc8a4c2b97.png"},28453:(e,i,t)=>{t.d(i,{R:()=>l,x:()=>d});var s=t(96540);const n={},c=s.createContext(n);function l(e){const i=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(c.Provider,{value:i},e.children)}}}]);